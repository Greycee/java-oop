Implementation inheritance 

mechanism whereby a subclass re-uses code in a base class. By default the subclass retains all of the operations of the base class, but the subclass may override some or all operations, replacing the base-class implementation with its own.

Implements an abstract class. I take something from the superclass but I also implement new things.

Abstract class: It can't be instantiated (generate objects). It only serves as a parent class.

Abstract method: It is declared but it is not implemented on the parent class. - It can only be implemented on interfaces or an abstract classes.

Final class: It can't be inherited from another class. It does not have children.

Final method: It can't be overriden by its subclasses. Mandatorily inherited.

Generalization: Up-casting (from bottom to top)
Specialization: Down-casting (from top to bottom)

